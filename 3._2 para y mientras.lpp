//eclaracion de arreglos//
arreglo [20] de cadena [100] nombres

//declaracion de variables//
entero i,j
cadena [100] aux
caracter sw

//programa principal//
/*inicio
		
		i<-1
		mientras (i < 21) haga
				escriba "digite un nombre: "
				lea nombres[i]
				i<- i+1
				
		fin mientras
		
	//organizar el vector utilizando el metodo burbuja
	i <-2
	
	repita
	
			j<- 1
			repita
				si (nombres[j]>nombres[j+1]) entonces
					aux <- nombres [j]
					nombres[j]<-nombres [j+1]
					nombres[j+1]<- aux
				fin si
				j<- j+1
			hasta (j>19)
			i<-i+1
	hasta(i>20)
	
	
	//mostrar el vector ordenado//
	i<-1
	mientras (i < 21) haga
			escriba nombres[i]
			llamar nueva_linea()
			i <- i +1
	fin mientras
	
	
	//lectura para el fin del programa//
	escriba "´pulse enter para continuar ...."
	lea sw	
	
fin*/

/*inicio
      
      
      para i<- 1 hasta 21 haga
      
       		escriba " digite un nombre: "
        	lea nombres[i]
        	i<- i+1
      fin para
        para i<-2 hasta 20 haga
         
        	para j<-1 hasta 19 haga
        
        		si (nombres[j]>nombres[j+1]) entonces
					aux <- nombres [j]
					nombres[j]<-nombres [j+1]
					nombres[j+1]<- aux
				fin si
		    fin para
		
		fin para
		
	para i<- 1 hasta 21 haga
		escriba nombres[i]
		llamar nueva_linea()
	fin para
			escriba "´pulse enter para continuar ...."
	        lea sw	
fin*/

inicio

 		    i<- 1
 			repita
 			
 		    	escriba " digite un nombre: "
        		lea nombres[i]
        		i<- i+1
        	
 			hasta(i>20)
 		
 		i <-2
	    repita
			j<- 1
			repita
				si (nombres[j]>nombres[j+1]) entonces
					aux <- nombres [j]
					nombres[j]<-nombres [j+1]
					nombres[j+1]<- aux
				fin si
				j<- j+1
			hasta (j>19)
			i<-i+1
    	hasta(i>20)
    	
    i<-1
	repita  
		escriba nombres[i]
		llamar nueva_linea()
		i <- i +1
	hasta(i > 21)
	
	escriba "´pulse enter para continuar ...."
	lea sw
	
fin
	
    	
	
 	
 		
 		
 		


	